name: CI

on:
  push:
    branches:
      - 'dev/*'
  pull_request:
    branches:
      - 'dev/*' 

jobs:
  cleanup:
    name: üßπ Stop and Remove Containers
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_DEV }}
      DATABASE_HOST: db_dev
      DATABASE_PORT: 5432
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: birthdays_db
      POSTGRES_INIT_PATH: ${{ secrets.POSTGRES_INIT_PATH_DEV }}
      POSTGRES_DATA_PATH: ${{ secrets.POSTGRES_DATA_PATH_DEV }}
      TYPE_OF_PUBLICATION: dev
    runs-on: self-hosted
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üõë Stop Containers
        run: docker compose -f docker-compose-dev.yml down

  build:
    name: üèóÔ∏è Build and Run Containers
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_DEV_TOKEN }}
      DATABASE_HOST: db_dev
      DATABASE_PORT: 5432
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: birthdays_db
      POSTGRES_INIT_PATH: ${{ secrets.POSTGRES_INIT_PATH_DEV }}
      POSTGRES_DATA_PATH: ${{ secrets.POSTGRES_DATA_PATH_DEV }}
      TYPE_OF_PUBLICATION: dev
    runs-on: self-hosted
    needs: cleanup
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: ‚ñ∂Ô∏è Start Containers
        run: docker compose -f docker-compose-dev.yml up -d --build